---
http_interactions:
- request:
    method: get
    uri: https://www.goodreads.com/book/show?format=xml&id=123&key=GOODREADS_KEY
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - rest-client/2.1.0 (darwin19.4.0 x86_64) ruby/2.6.3p62
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Host:
      - www.goodreads.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Sat, 23 May 2020 02:10:24 GMT
      Content-Type:
      - application/xml; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Frame-Options:
      - ALLOWALL
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      - nosniff
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
      Etag:
      - W/"870e9d00f14f35d19cf0881a56a2e366"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - ccsid=771-6956265-0352565; path=/; expires=Wed, 23 May 2040 02:10:24 -0000
      - locale=en; path=/
      X-Request-Id:
      - W2VBZHPFRCJD7EZG3RC2
      X-Runtime:
      - '0.292664'
      Vary:
      - User-Agent,Content-Type,Accept-Encoding,X-Amzn-CDN-Cache,X-Amzn-AX-Treatment,User-Agent
      X-Amz-Rid:
      - W2VBZHPFRCJD7EZG3RC2
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Sat, 23 May 2020 02:10:25 GMT
- request:
    method: get
    uri: https://www.goodreads.com/api/reviews_widget_iframe?did=DEVELOPER_ID&format=html&isbn=0385732546&links=660&min_rating=&review_back=fff&stars=000&text=000
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Server
      Date:
      - Sat, 23 May 2020 02:10:26 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Status:
      - 200 OK
      X-Frame-Options:
      - ALLOWALL
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      - nosniff
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains; preload
      Etag:
      - W/"87e31143fc29374a031017c121ce0e39"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _session_id2=ceda4776cc28fbbc3b84a84f43be6832; path=/; expires=Sat, 23 May
        2020 08:10:26 -0000; HttpOnly
      - ccsid=416-0393434-6636186; path=/; expires=Wed, 23 May 2040 02:10:26 -0000
      - locale=en; path=/
      - logged_out_browsing_page_count=1; path=/; expires=Thu, 23 May 2030 02:10:26
        -0000
      X-Request-Id:
      - 5QQF03WEMPV1YD4QZD5Y
      X-Runtime:
      - '0.223003'
      Vary:
      - Content-Type,Accept-Encoding,X-Amzn-CDN-Cache,X-Amzn-AX-Treatment,User-Agent
      X-Amz-Rid:
      - 5QQF03WEMPV1YD4QZD5Y
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Sat, 23 May 2020 02:10:26 GMT
recorded_with: VCR 5.1.0
